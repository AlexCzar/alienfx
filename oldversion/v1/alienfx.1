'\" t
.\"     Title: alienfx
.\"    Author: Simon Tibble <simon@tibble.net>
.\" Generator: text editor
.\"      Date: 21/05/2012
.\"    Manual: alienfx
.\"    Source: GNU
.\"  Language: English
.\"
.TH "ALIENFX" "1" "18/05/2012" "GNU" "alienfx"
.\" * Define some portability stuff
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
alienfx \- Change the configuration of AlienFX lightchip control on AlienWare hardware
.SH "SYNOPSIS"
.HP \w'\fBalienfx\fR\ 'u
\fBalienfx\fR [\fB\-c\fR \fIMRGB\fR[\fIRGB\fR[\fIZZZZZZZZZZZZZZZZ\fR]]] [\fB\-d\fR \fInumber\fR] [\fB\-P\fR \fIhex\fR] [\fB\-r\fR] [\fB\-R\fR] [\fB\-s\fR] [\fB\-t\fR \fInumber\fR] [\fB\-u\fR] [\fB\-v\fR]
.PP
\fBalienfx \-p\fR \fInumber\fR [\fB-u\fR] [\fB-v\fR]
.PP
\fBalienfx \-h\fR
.SH "DESCRIPTION"
.PP
\fBalienfx\fR sets the internal data structure given on the command line into the AlienFX lighting chip embedded into AlienWare hardware.
.PP
Write permission is required to the internal USB port; you can either run the program as root using \fBsu\fR(1) or \fBsudo\fR(8) or you can configure access to the USB-subsystem with \fBudev\fR(7) for the user invoking the program.
.PP
This version of \fBalienfx\fR can write to multiple chip types (auto-detection), has individual zoning support and a 4096 colour RGB-spectrum.
.PP
If \fBalienfx\fR is called with no arguments all the lights are turned off.
.SH "OPTIONS"
.PP
\fB\-c\fR \fB\fIMRGB[RGB[ZONEZONEZONEZONE]]\fR\fR  (Default: F0000001111111111111111)
.RS 4
Colour command.  This option specifies the MODE to be used, the primary RGB colour to be set, the secondary RGB colour to be set and the ZONEs you want included in this command.
.PP
MODE is a single digit of either B, F or M.  Blink, Fixed or Morph respectively.  This will affect how the RGB value(s) are used.
.PP
RGB value is 3-single digit hex.  For example, solid red is F00, solid green is 0F0 and solid blue is 00F.  For secondary colours, used by flash and morph, place the two side-by-side as in the example below.  The default colours are 000.
.PP
ZONE is 16-digit binary.  Setting a zone to 1 indicates the colour will be set for that zone.  Setting a zone to 0 indicates the colour will not be set for that zone.  The default is to set colour for all zones.  There are 16 zones.  Each lightchip is different due to changes between AlienWare hardware revisions, so experiment with your own zone numbers to find your specific zones if you want to set lights individually.
.RE
.PP
\fB\-d\fR \fB\fInum\fR\fR
.RS 4
Set the delay between morph/flash increments.  Number between 1 and 10, ten being the slowest.
.RE
.PP
\fB\-h\fR
.RS 4
Display helpful command line usage information.
.RE
.PP
\fB\-p\fR \fB\fInum\fR\fR
.RS 4
Predefined colour presets.  These apply by default to all zones.  To see a list use "-p 0".  There are 20 presets.
.RE
.PP
\fB\-P\fR \fB\fIhex\fR\fR
.RS 4
When attempting to set the chip data, use this specified \fIproductID\fR in hexadecimal.  You can learn your particular ProductID from the \fBlsusb\fR(8) command.  Look for the device mentioned as "AlienWare", it should have a VendorID of "187c".  By default, \fBalienfx\fR will attempt to access ProductID's 0511, 0512, 0513, 0514 and 0522.
.RE
.PP
\fB\-r\fR
.RS 4
Reset the lightchip before sending colour information.
.RE
.PP
\fB\-R\fR
.RS 4
Reboots the lightchip, as if the power had been turned off then back on again.
.RE
.PP
\fB\-s\fR
.RS 4
Save the colour commands into the lightchip EEPROM.
.RE
.PP
\fB\-t\fR \fB\fInum\fR\fR
.RS 4
Set the delay between USB interactions with the lightchip.  Number between 1 and 100, one hundred being the slowest.  Some models of lightchip need longer delays than others; the default is about 200msec, this value multiplies that.
.RE
.PP
\fB\-u\fR
.RS 4
Produces USB diagnostic output to stdout.
.RE
.PP
\fB\-v\fR
.RS 4
Verbose output to stdout so you can see what is happening.
.RE
.PP
.SH "EXAMPLES"
.PP
alienfx \-v \-c ff00
.RS 4
Turn all lights fixed on bright red and show us messages as it happens.
.RE
.PP
alienfx \-c f0f00000001000000000000
.RS 4
Turn light zone 4 fixed to bright green.
.RE
.PP
alienfx \-c bfff00f0000000001110000
.RS 4
Turn light zones 10 thru 12 blinking white to bright blue.
.RE
.PP
alienfx \-r \-c ff0f0001111111111110000
.RS 4
Reset the lightchip, then turn light zones 1 thru 12 fixed to bright pink.
.RE
.PP
alienfx \-p 0514 \-c m0ffff0
.RS 4
Turn all lights morph between bright aqua and bright yellow, with lightchip USB ProductID 0514.
.RE
.PP
alienfx \-c mf000f0 \-c m0f000f \-c m00ff00
.RS 4
Turn all lights morph between bright red then bright green then bright blue then bright red again.
.RE
.PP
alienfx
.RS 4
Turn lights off.
.RE
.PP
alienfx \-c FFF0FFF0000000001100001
.RS 4
On the M11X R3 laptop, zones 1, 2 & 3 are the power button/eyes, zone 5 is the media bar, zone 8 is the logo, zones 10 & 11 are the speakers and zone 16 is the keyboard.  In this example we set the speakers and keyboard to fixed yellow.
.RE
.SH "COMPATIBILITY"
.PP
Due to testing limitations, this program may not work on your specific hardware without tweaking.  However, many models have been programmed for including:
.RS 4
AlienWare M11X R1/R2 Laptop
.RE
.RS 4
AlienWare M11X R3 Laptop
.RE
.RS 4
AlienWare AREA51
.RE
.RS 4
AlienWare Aurora (non-ALX)
.RE
.RS 4
Compatibility-mode
.RE
.PP
The lightchip only allow RGB colour values which are divisible by 16.  This leads to 4096 possible colour combinations.
.PP
Currently, the flashing colour option is not completely functional.
.PP
Some times the lightchip becomes unresponsive.  If this happens to you, reset the lightchip by running \fBalienfx\fR with no arguments.  If it is still unresponsive, try \fBalienfx -R\fR to reboot the chip, and if it is still not co-operating then completely power-cycle your hardware.
.SH "SEE ALSO"
.PP
\fBlsusb\fR(8), \fBsu\fR(1), \fBsudo\fR(8), \fBudev\fR(7)
.SH "AUTHOR"
.PP
Simon Tibble <simon@tibble.net>
